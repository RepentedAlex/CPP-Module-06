4 styles de casts:
c-style casts eg : (type) expresssion;
	-> can fail but no way to know, works as any if the cast bellow... (bad)

static-casts eg : static_cast<type> expression
	-> convert value that is non ref
	eg:
		double a = 42.42;
		int b = static_cast<int>a;
		void *adr_a = 0xDEADBEEF;
		long adr_l = reinterpret_cast<long> adr_a;
		void *adr_b = reinterpret_cast<void *> adr_l;

dynamic casts for reference eg : dyanmic_cast<type &> expression
	-> convert reference to another type or throws (parent / child)
	eg:
		void f(Animal &anima_ref) {
			try {
				dynamic_cast<cat &>anima_ref;
				std::cout << "Animal is a Cat" << std::endl;
				return ;
			} catch (...) {
			}
			try {
				dynamic_cast<dog &>anima_ref;
				std::cout << "Animal is a Dog" << std::endl;
				return ;
			} catch (...) {
			}
			std::cout << "unknown animal type" << std::endl;
		}

dynamic casts for pointers eg : dyanmic_cast<type *> expression
	-> convert Pointer to another pointed type or NULL- (parent / child)
	eg:
		void f(Animal *anima_ref) {
			if (dynamic_cast<cat *>anima_ref != NULL);
				std::cout << "Animal is a Cat" << std::endl;
			else if (dynamic_cast<dog *>anima_ref != NULL);
				std::cout << "Animal is a Dog" << std::endl;
			else
				std::cout << "unknown animal type" << std::endl;
		}
